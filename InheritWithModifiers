pragma solidity ^0.4.0;

contract father{
    
    uint money = 10000;

// variable without modifier could be inherited
// with modifier public could be inherited
// internal could be inherited
// external could cause compile error
// private couldn't be inheribited

    function dahan() private returns(string){
        
        return "Zzzz....";
        
    }
    
//function without modifier could be inherited
//public could be inherited
//internal could be inherited
//external could be inherited, but cannot be called directly, could be called with key word "this"
//private cannot be inherited
    
}

contract son is father{
    
    function getMoney() returns(uint){
        
        return money;
        
    }
    
    function maobing() returns(string){
        
        return this.dahan();
    }
    
}
